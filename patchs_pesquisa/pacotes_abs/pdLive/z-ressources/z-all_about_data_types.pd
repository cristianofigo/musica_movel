#N canvas 220 70 873 654 10;
#X obj 453 470 route;
#X floatatom 93 115 5 0 0 1 "float" - -;
#X symbolatom 184 115 10 0 0 1 "symbol" - -;
#X obj 96 211 symbol;
#X symbolatom 96 258 0 0 0 0 - - -;
#X msg 105 235 word;
#X msg 96 193 test;
#X msg 79 171 symbol this;
#X text 170 170 set type directly;
#X text 144 236 does not work (check console messages);
#X floatatom 15 233 5 0 0 0 - - -;
#X msg 20 212 12;
#X msg 3 192 float 83;
#N canvas 770 126 486 336 Related_Objects 0;
#X obj 32 54 ftos;
#X obj 68 54 list2symbol;
#X text 23 22 data type conversion;
#X obj 155 55 tosymbol;
#X obj 219 55 fromsymbol;
#X obj 36 252 lister;
#X obj 34 98 atoi;
#X obj 30 138 list2int;
#X obj 94 137 l2i;
#X obj 96 163 a2l;
#X obj 29 164 any2list;
#X obj 158 138 list2symbol;
#X obj 158 159 symbol2list;
#X obj 247 138 l2s;
#X obj 247 158 s2l;
#X restore 433 581 pd Related_Objects;
#X text 427 256 Many objects cast the data they receive when they output
it:;
#X text 546 337 Some objects do not cast the data:;
#X obj 444 308 trigger anything;
#X msg 444 283 this is a list without a cast;
#X obj 444 331 print;
#X text 430 371 Some objects need to have the data explicitly declared
in order to handle it. These are mostly symbol handling objects.;
#X text 430 437 Objects which route data generally can handle explicitly
or implicitly defined data.;
#X obj 500 470 trigger;
#X obj 558 470 niagara;
#X obj 446 414 select;
#X obj -5 -2 cnv 15 850 20 empty empty all_about_data_types 20 10 1
18 -233017 -66577 0;
#X obj 811 -1 pddp;
#X text 635 597 updated for Pd version 0.37.1;
#X text -9 291 "anything";
#X text -9 407 "list";
#X text -9 393 "float";
#X text -9 434 "symbol";
#X text -9 420 "scalar";
#X text -9 380 "bang";
#X msg 91 339 anything 1 two three;
#X msg 242 339 one 2 3;
#X obj 147 422 bng 15 250 50 0 empty empty empty 0 -6 0 8 -262144 -1
-1;
#X obj 151 396 t a b f l p s;
#X obj 181 423 bng 15 250 50 0 empty empty empty 0 -6 0 8 -262144 -1
-1;
#X msg 244 373 list one 2 3;
#X msg 283 403 1 2 3;
#X text 197 35 float symbol pointer;
#X text -3 35 atoms (basic data types):;
#X text -3 60 The basic data types are known as 'atoms' in Pd. "float"
and "symbol" atoms have 'atom boxes' for realtime display and control
from within a patch. "pointer" atoms are used for accessing data stored
in graphical data structures.;
#X obj 441 208 int;
#X obj 449 188 / 5.23;
#X floatatom 449 160 5 0 0 0 - - -;
#X floatatom 482 228 5 0 0 0 - - -;
#X floatatom 441 228 5 0 0 0 - - -;
#X obj 531 158 tosymbol;
#X obj 595 159 fromsymbol;
#X obj 678 158 list2symbol;
#X obj 682 200 ftos;
#X obj 637 43 symbol;
#X obj 600 96 int;
#X obj 719 43 pointer;
#X obj 460 96 bang;
#X obj 498 97 bng 15 250 50 0 empty empty empty 0 -6 0 8 -262144 -1
-1;
#X obj 519 43 float;
#X text 1 527 There a number of objects which are used for storing
messages \, or casting messages as a specific data type \, sometimes
converting from one data type to another. The right inlet on these
objects is stores that value \, which can be later output using a bang.
;
#X obj 628 96 lister;
#X text 560 44 aka;
#X obj 586 43 f;
#X text 22 613 (C) Copyright 2004 Hans-Christoph Steiner <hans@at.or.at>
;
#X text 239 627 released under the GNU GPL;
#X text 435 614 $Revision: 1.4 $$Date: 2005/04/26 05:34:40 $;
#X text 436 627 $Author: eighthave $;
#X obj 433 517 pddp_open all_about_lists_vs_anythings;
#X obj 433 538 pddp_open all_about_symbol_construction;
#X obj 433 559 pddp_open all_about_data_structures;
#X text 515 97 (aka [bng]);
#X text 3 304 "anything" allows anything to pass through unchanged.
It is not a data type tho.;
#X text -6 143 "symbols" need to be declared explicitly. "floats" do
not need to be declared explicitly \, but can be:;
#X text 153 212 casting as a "symbol";
#X text 1 509 CASTING AND STORAGE OBJECTS;
#X text 431 498 FOR MORE INFO:;
#X text 430 138 EXAMPLES OF CASTING;
#X text 425 43 atom objects:;
#X text 432 74 other data types:;
#X connect 3 0 4 0;
#X connect 5 0 4 0;
#X connect 6 0 3 0;
#X connect 7 0 4 0;
#X connect 11 0 10 0;
#X connect 12 0 10 0;
#X connect 16 0 18 0;
#X connect 17 0 16 0;
#X connect 33 0 36 0;
#X connect 34 0 36 0;
#X connect 36 0 35 0;
#X connect 36 3 37 0;
#X connect 38 0 36 0;
#X connect 39 0 36 0;
#X connect 43 0 47 0;
#X connect 44 0 43 0;
#X connect 44 0 46 0;
#X connect 45 0 44 0;
