#N canvas 71 145 817 377 10;
#X declare -path z_rjdj_abs;
#X obj 117 32 inlet~;
#X obj 195 33 inlet~;
#X obj 118 241 outlet~;
#X obj 512 54 inlet;
#X obj 213 142 line~;
#X msg 213 119 \$1 10;
#X obj 213 85 r \$0-delay1;
#X obj 361 142 line~;
#X msg 361 119 \$1 10;
#X obj 361 85 r \$0-delay2;
#X obj 346 33 inlet~;
#X obj 271 32 inlet~;
#N canvas 0 22 1057 597 two_delaylines_cross_connected 0;
#X obj 57 84 inlet~;
#X obj 860 45 block~ 16;
#X obj 503 83 inlet~;
#X obj 504 114 vd~ \$0-del1;
#X obj 94 338 outlet~;
#X obj 503 163 lop~ 10000;
#X obj 57 458 delwrite~ \$0-del1 \$2;
#X obj 780 90 inlet~;
#X obj 781 121 vd~ \$0-del2;
#X obj 307 458 delwrite~ \$0-del2 \$2;
#X obj 339 334 outlet~;
#X obj 307 86 inlet~;
#X obj 583 163 r \$0-lpfreq1;
#X obj 859 164 r \$0-lpfreq2;
#X obj 781 164 lop~ 10000;
#X obj 504 229 *~ 0;
#X obj 529 208 clip -1 1;
#X obj 628 227 *~ 0;
#X obj 653 206 clip -1 1;
#X obj 903 239 *~ 0;
#X obj 928 218 clip -1 1;
#X obj 782 238 *~ 0;
#X obj 807 217 clip -1 1;
#X obj 781 144 clip~ -1 1;
#X obj 504 138 clip~ -1 1;
#X obj 529 187 r \$0-feedback1;
#X obj 653 185 r \$0-x-feedback1;
#X obj 807 196 r \$0-x-feedback2;
#X obj 928 197 r \$0-feedback2;
#X connect 0 0 6 0;
#X connect 0 0 4 0;
#X connect 2 0 3 0;
#X connect 3 0 24 0;
#X connect 5 0 15 0;
#X connect 5 0 17 0;
#X connect 7 0 8 0;
#X connect 8 0 23 0;
#X connect 11 0 9 0;
#X connect 11 0 10 0;
#X connect 12 0 5 1;
#X connect 13 0 14 1;
#X connect 14 0 19 0;
#X connect 14 0 21 0;
#X connect 15 0 6 0;
#X connect 15 0 4 0;
#X connect 16 0 15 1;
#X connect 17 0 9 0;
#X connect 17 0 4 0;
#X connect 18 0 17 1;
#X connect 19 0 9 0;
#X connect 19 0 10 0;
#X connect 20 0 19 1;
#X connect 21 0 6 0;
#X connect 21 0 10 0;
#X connect 22 0 21 1;
#X connect 23 0 14 0;
#X connect 24 0 5 0;
#X connect 25 0 16 0;
#X connect 26 0 18 0;
#X connect 27 0 22 0;
#X connect 28 0 20 0;
#X restore 118 183 pd two_delaylines_cross_connected;
#N canvas 0 22 450 300 conversions 0;
#X obj 57 72 swap 1000;
#X obj 57 102 /;
#X text 140 71 delay time can be set as frequency as well.;
#X obj 57 131 s \$0-delay1;
#X obj 58 183 swap 1000;
#X obj 58 213 /;
#X obj 58 154 r \$0-delayfreq2;
#X obj 58 242 s \$0-delay2;
#X obj 57 43 r \$0-delayfreq1;
#X connect 0 0 1 0;
#X connect 0 1 1 1;
#X connect 1 0 3 0;
#X connect 4 0 5 0;
#X connect 4 1 5 1;
#X connect 5 0 7 0;
#X connect 6 0 4 0;
#X connect 8 0 0 0;
#X restore 512 329 pd conversions;
#X obj 346 247 outlet~;
#N canvas 172 83 586 377 LICENSE-GPL 0;
#X text 57 88 This program is free software: you can redistribute it
and/or modify it under the terms of the GNU General Public License
as published by the Free Software Foundation \, either version 3 of
the License \, or (at your option) any later version.;
#X text 58 168 This program is distributed in the hope that it will
be useful \, but WITHOUT ANY WARRANTY \; without even the implied warranty
of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
General Public License for more details.;
#X text 57 261 You should have received a copy of the GNU General Public
License along with this program. If not \, see <http://www.gnu.org/licenses/>.
;
#X text 61 54 Copyright (C) 2009 \, Reality Jockey Ltd.;
#X text 60 325 See the file LICENSE.txt for the full license text.
;
#X restore 672 19 pd LICENSE-GPL;
#X obj 563 55 z-u_loader e_pingpong-\$1 \$0;
#X obj 512 81 z-u_dispatch \$0 feedback1;
#X obj 512 105 z-u_dispatch \$0 feedback2;
#X obj 512 125 z-u_dispatch \$0 x-feedback1;
#X obj 512 149 z-u_dispatch \$0 x-feedback2;
#X obj 512 172 z-u_dispatch \$0 lpfreq1;
#X obj 512 195 z-u_dispatch \$0 delay1;
#X obj 512 217 z-u_dispatch \$0 delayfreq1;
#X obj 512 241 z-u_dispatch \$0 lpfreq2;
#X obj 512 264 z-u_dispatch \$0 delay2;
#X obj 512 286 z-u_dispatch \$0 delayfreq2;
#X text 103 -10 Delays set through last inlet will be added to the
delay of the audio delay inlet (second inlet);
#X text 102 -157 e_pingpong;
#X text 102 -136 pingpong feedback delay line with lowpass filtered
feedback path.;
#X text 108 -94 use as: e_pingpong <NAME> <max delay time in ms>;
#X text 103 -68 WARNING: For stable operation the sum of direct feedback
and cross-feedback on each channel must not be greater than 1;
#N canvas 0 22 1024 561 HowTo 0;
#X obj 142 247 vline~;
#X obj 160 269 noise~;
#X obj 141 291 *~;
#X obj 291 343 / 100;
#X obj 291 237 vsl 15 100 0 100 0 0 empty empty x_feedback_1+2 0 -9
1 10 -262144 -1 -1 0 1;
#X obj 214 427 sig~ 0;
#X obj 142 194 bng 24 250 50 0 empty empty empty 17 7 0 10 -4034 -1
-1;
#X msg 142 222 0.8 10 \, 0 20 10;
#X obj 572 215 vsl 15 100 0 2000 0 0 empty empty delay_time2_(ms) 0
-9 1 10 -262144 -1 -1 0 1;
#X floatatom 579 320 8 0 0 0 - - -;
#X floatatom 308 367 5 0 0 0 - - -;
#X obj 671 213 vsl 15 128 0 127 0 0 empty empty delay_frequency_1+2
0 -9 1 10 -262144 -1 -1 0 1;
#X obj 671 354 mtof;
#X floatatom 709 353 5 0 0 1 pitch - -;
#X obj 397 204 vsl 15 128 0 127 0 0 empty empty lowpass_cutoff_fr._1+2
0 -9 1 10 -262144 -1 -1 0 1;
#X obj 397 345 mtof;
#X floatatom 411 368 8 0 0 0 - - -;
#X obj 671 426 s \$0-trigger;
#X obj 142 144 r \$0-trigger;
#X obj 142 168 bang;
#X text 667 174 sets delaytime as a frequency value;
#X obj 214 313 vsl 15 100 0 2000 0 0 empty empty delay_time(ms) -10
-9 1 10 -262144 -1 -1 0 1;
#X floatatom 687 377 8 0 0 1 freq - -;
#X obj 140 457 e_pingpong myping 2000;
#X msg 671 395 delayfreq1 \$1 \, delayfreq2 \$1;
#X obj 497 215 vsl 15 100 0 2000 0 0 empty empty delay_time1 0 -9 1
10 -262144 -1 -1 0 1;
#X floatatom 504 324 8 0 0 0 - - -;
#X msg 497 365 delay1 \$1;
#X msg 572 364 delay2 \$1;
#X msg 397 396 lpfreq1 \$1 \, lpfreq2 \$1;
#X obj 898 344 / 100;
#X obj 898 238 vsl 15 100 0 100 0 0 empty empty direct_feedback_1+2
0 -9 1 10 -262144 -1 -1 0 1;
#X floatatom 915 368 5 0 0 0 - - -;
#X msg 291 425 x-feedback1 \$1 \, x-feedback2 \$1;
#X msg 898 406 feedback1 \$1 \, feedback2 \$1;
#X obj 177 296 *~;
#X obj 209 268 osc~ 880;
#N canvas 497 258 527 508 GUI 0;
#X restore 427 485 pd GUI;
#X obj 306 460 r \$0-CTL;
#X obj -16 449 s \$0-CTL;
#X obj -16 141 z-g_nhsl lpfreq1 0 10000;
#X obj -16 173 z-g_nhsl lpfreq2 0 10000;
#X obj -16 214 z-g_nhsl x-feedback1 0 1;
#X obj -16 243 z-g_nhsl x-feedback2 0 1;
#X obj -16 306 z-g_nhsl feedback1 0 1;
#X obj -17 336 z-g_nhsl feedback2 0 1;
#X obj -16 376 z-g_nbx delay1;
#X obj -16 407 z-g_nbx delay2;
#X connect 0 0 2 0;
#X connect 0 0 35 0;
#X connect 1 0 2 1;
#X connect 2 0 23 0;
#X connect 3 0 33 0;
#X connect 3 0 10 0;
#X connect 4 0 3 0;
#X connect 5 0 23 2;
#X connect 6 0 7 0;
#X connect 7 0 0 0;
#X connect 8 0 28 0;
#X connect 8 0 9 0;
#X connect 11 0 12 0;
#X connect 11 0 13 0;
#X connect 12 0 24 0;
#X connect 12 0 22 0;
#X connect 14 0 15 0;
#X connect 15 0 29 0;
#X connect 15 0 16 0;
#X connect 18 0 19 0;
#X connect 19 0 6 0;
#X connect 21 0 5 0;
#X connect 24 0 17 0;
#X connect 24 0 23 4;
#X connect 25 0 27 0;
#X connect 25 0 26 0;
#X connect 27 0 23 4;
#X connect 28 0 23 4;
#X connect 29 0 23 4;
#X connect 30 0 34 0;
#X connect 30 0 32 0;
#X connect 31 0 30 0;
#X connect 33 0 23 4;
#X connect 34 0 23 4;
#X connect 35 0 23 1;
#X connect 36 0 35 1;
#X connect 38 0 23 4;
#X connect 40 0 41 0;
#X connect 41 0 42 0;
#X connect 42 0 43 0;
#X connect 43 0 44 0;
#X connect 44 0 45 0;
#X connect 45 0 46 0;
#X connect 46 0 47 0;
#X connect 47 0 39 0;
#X restore 558 -128 pd HowTo;
#X obj 510 -13 declare -path z_rjdj_abs;
#X connect 0 0 12 0;
#X connect 1 0 12 1;
#X connect 3 0 17 0;
#X connect 4 0 12 2;
#X connect 5 0 4 0;
#X connect 6 0 5 0;
#X connect 7 0 12 3;
#X connect 8 0 7 0;
#X connect 9 0 8 0;
#X connect 10 0 12 3;
#X connect 11 0 12 2;
#X connect 12 0 2 0;
#X connect 12 1 14 0;
#X connect 17 0 18 0;
#X connect 18 0 19 0;
#X connect 19 0 20 0;
#X connect 20 0 21 0;
#X connect 21 0 22 0;
#X connect 22 0 23 0;
#X connect 23 0 24 0;
#X connect 24 0 25 0;
#X connect 25 0 26 0;
